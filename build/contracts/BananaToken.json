{
  "contractName": "BananaToken",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBananas",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBananas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/BananaToken.sol\":\"BananaToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa6f2be28404e8f1c7490b55ca772b22e2b4ba82beb2148d8bdf24785e02485cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50e704dbe12ffe90b0a5ebbaa58c844bc491bb9bafc24d2168e0cb38fb775175\",\"dweb:/ipfs/QmVcc8xvfRnqNbnZB8iHZgnBiqo6mkAD8F8iGYPLWiTqGr\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x662b9a3e9f233baae6d71604c754d64e83b830619c1a6d884bf6d580f721cfa9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e5aaa93fe5e2323d13497939edb1bcb495762c9d54ee71305e7b9d838252216\",\"dweb:/ipfs/QmZCPqXXMMXyNRREaeKRZ8uZg4g4WjGoyMHZSr6He4vpMG\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x86c14973ef3c7c92e70f12a3ac006b493b6c1113ce1da734ab42bbc0a6b513e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1782d170cef01249659816b77815d16efb0685a2645d0fac8594f9a7e4ad7dc1\",\"dweb:/ipfs/QmdrNnPxe2WydfDCUgufK2SkuesSttiAxCaBni6uVmML6Y\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x750e44d21c2a68e37d0a653708ab407fa686a9913954315acb5b8ee62b13ede2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63caf25854fdac2eac3e447b680ed3731a5f91c694060e4f4c740f6dec77515d\",\"dweb:/ipfs/QmS8KSxahitmgbYrsMFmwQwQguRn2Li1bcj9o881N6UEpL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x2e2ac762cc60af55c199a4926f4c360aa00cec4af6dfed7475fc866353ea6c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98f72b227c30903022ee8a898b55dacbbcc73d633e10022edcaeea61e4ef312e\",\"dweb:/ipfs/QmedXrqXE7r6Pazs4aBfwDJNPdiw25ovisBiWZ3EACFQFh\"]},\"project:/contracts/BananaToken.sol\":{\"keccak256\":\"0x75c5b889a75848177939eaf55078cda98d54a03cd13fdccd0fec0137becae438\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a50bc38810c6a72605a52d0fc08fc47e90b042b0609e4f60bfc40cd2d43a1465\",\"dweb:/ipfs/QmUrSSEzqipsHdBaTpQAB3sMTb3n8Z6fMpU1DCamD598wE\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604080518082018252600b81526a2130b730b730aa37b5b2b760a91b60208083019182528351808501909452600684526542414e414e4160d01b9084015281519192916200006391600391620000f2565b50805162000079906004906020840190620000f2565b50505062000096620000906200009c60201b60201c565b620000a0565b620001d5565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001009062000198565b90600052602060002090601f0160209004810192826200012457600085556200016f565b82601f106200013f57805160ff19168380011785556200016f565b828001600101855582156200016f579182015b828111156200016f57825182559160200191906001019062000152565b506200017d92915062000181565b5090565b5b808211156200017d576000815560010162000182565b600281046001821680620001ad57607f821691505b60208210811415620001cf57634e487b7160e01b600052602260045260246000fd5b50919050565b610dfd80620001e56000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063a9059cbb11610066578063a9059cbb146101d5578063d053407b146101e8578063dd62ed3e146101f0578063f2fde38b14610203576100f5565b8063715018a61461019b5780638da5cb5b146101a557806395d89b41146101ba578063a457c2d7146101c2576100f5565b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461017557806370a0823114610188576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610138575b600080fd5b610102610216565b60405161010f9190610a25565b60405180910390f35b61012b6101263660046109dd565b6102a8565b60405161010f9190610a1a565b6101406102c5565b60405161010f9190610d51565b61012b61015b3660046109a2565b6102cb565b610168610364565b60405161010f9190610d5a565b61012b6101833660046109dd565b610369565b61014061019636600461094f565b6103bd565b6101a36103dc565b005b6101ad610427565b60405161010f9190610a06565b610102610436565b61012b6101d03660046109dd565b610445565b61012b6101e33660046109dd565b6104be565b6101a36104d2565b6101406101fe366004610970565b61059f565b6101a361021136600461094f565b6105ca565b60606003805461022590610d8c565b80601f016020809104026020016040519081016040528092919081815260200182805461025190610d8c565b801561029e5780601f106102735761010080835404028352916020019161029e565b820191906000526020600020905b81548152906001019060200180831161028157829003601f168201915b5050505050905090565b60006102bc6102b561063b565b848461063f565b50600192915050565b60025490565b60006102d88484846106f3565b6001600160a01b0384166000908152600160205260408120816102f961063b565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156103455760405162461bcd60e51b815260040161033c90610bcf565b60405180910390fd5b6103598561035161063b565b85840361063f565b506001949350505050565b601290565b60006102bc61037661063b565b84846001600061038461063b565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103b89190610d68565b61063f565b6001600160a01b0381166000908152602081905260409020545b919050565b6103e461063b565b6001600160a01b03166103f5610427565b6001600160a01b03161461041b5760405162461bcd60e51b815260040161033c90610c17565b610425600061081d565b565b6005546001600160a01b031690565b60606004805461022590610d8c565b6000806001600061045461063b565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104a05760405162461bcd60e51b815260040161033c90610cd5565b6104b46104ab61063b565b8585840361063f565b5060019392505050565b60006102bc6104cb61063b565b84846106f3565b600660006104de61063b565b6001600160a01b0316815260208101919091526040016000205460ff16156105185760405162461bcd60e51b815260040161033c90610abb565b6103e860006105256102c5565b905060016006600061053561063b565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905561056e61056861063b565b8361086f565b6105788282610d68565b6105806102c5565b1461059b57634e487b7160e01b600052600160045260246000fd5b5050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105d261063b565b6001600160a01b03166105e3610427565b6001600160a01b0316146106095760405162461bcd60e51b815260040161033c90610c17565b6001600160a01b03811661062f5760405162461bcd60e51b815260040161033c90610b01565b6106388161081d565b50565b3390565b6001600160a01b0383166106655760405162461bcd60e51b815260040161033c90610c91565b6001600160a01b03821661068b5760405162461bcd60e51b815260040161033c90610b47565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906106e6908590610d51565b60405180910390a3505050565b6001600160a01b0383166107195760405162461bcd60e51b815260040161033c90610c4c565b6001600160a01b03821661073f5760405162461bcd60e51b815260040161033c90610a78565b61074a838383610933565b6001600160a01b038316600090815260208190526040902054818110156107835760405162461bcd60e51b815260040161033c90610b89565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906107ba908490610d68565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108049190610d51565b60405180910390a3610817848484610933565b50505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166108955760405162461bcd60e51b815260040161033c90610d1a565b6108a160008383610933565b80600260008282546108b39190610d68565b90915550506001600160a01b038216600090815260208190526040812080548392906108e0908490610d68565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610923908590610d51565b60405180910390a361059b600083835b505050565b80356001600160a01b03811681146103d757600080fd5b600060208284031215610960578081fd5b61096982610938565b9392505050565b60008060408385031215610982578081fd5b61098b83610938565b915061099960208401610938565b90509250929050565b6000806000606084860312156109b6578081fd5b6109bf84610938565b92506109cd60208501610938565b9150604084013590509250925092565b600080604083850312156109ef578182fd5b6109f883610938565b946020939093013593505050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b81811015610a5157858101830151858201604001528201610a35565b81811115610a625783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526026908201527f596f7520616c726561647920636c61696d656420796f757220667265652042616040820152653730b730b99760d11b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610d8757634e487b7160e01b81526011600452602481fd5b500190565b600281046001821680610da057607f821691505b60208210811415610dc157634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220ef0b9684bdaa92a721dbe95fd306f5eb275c879c7de302d773b1fd019f531f8e64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063a9059cbb11610066578063a9059cbb146101d5578063d053407b146101e8578063dd62ed3e146101f0578063f2fde38b14610203576100f5565b8063715018a61461019b5780638da5cb5b146101a557806395d89b41146101ba578063a457c2d7146101c2576100f5565b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461017557806370a0823114610188576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610138575b600080fd5b610102610216565b60405161010f9190610a25565b60405180910390f35b61012b6101263660046109dd565b6102a8565b60405161010f9190610a1a565b6101406102c5565b60405161010f9190610d51565b61012b61015b3660046109a2565b6102cb565b610168610364565b60405161010f9190610d5a565b61012b6101833660046109dd565b610369565b61014061019636600461094f565b6103bd565b6101a36103dc565b005b6101ad610427565b60405161010f9190610a06565b610102610436565b61012b6101d03660046109dd565b610445565b61012b6101e33660046109dd565b6104be565b6101a36104d2565b6101406101fe366004610970565b61059f565b6101a361021136600461094f565b6105ca565b60606003805461022590610d8c565b80601f016020809104026020016040519081016040528092919081815260200182805461025190610d8c565b801561029e5780601f106102735761010080835404028352916020019161029e565b820191906000526020600020905b81548152906001019060200180831161028157829003601f168201915b5050505050905090565b60006102bc6102b561063b565b848461063f565b50600192915050565b60025490565b60006102d88484846106f3565b6001600160a01b0384166000908152600160205260408120816102f961063b565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156103455760405162461bcd60e51b815260040161033c90610bcf565b60405180910390fd5b6103598561035161063b565b85840361063f565b506001949350505050565b601290565b60006102bc61037661063b565b84846001600061038461063b565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103b89190610d68565b61063f565b6001600160a01b0381166000908152602081905260409020545b919050565b6103e461063b565b6001600160a01b03166103f5610427565b6001600160a01b03161461041b5760405162461bcd60e51b815260040161033c90610c17565b610425600061081d565b565b6005546001600160a01b031690565b60606004805461022590610d8c565b6000806001600061045461063b565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104a05760405162461bcd60e51b815260040161033c90610cd5565b6104b46104ab61063b565b8585840361063f565b5060019392505050565b60006102bc6104cb61063b565b84846106f3565b600660006104de61063b565b6001600160a01b0316815260208101919091526040016000205460ff16156105185760405162461bcd60e51b815260040161033c90610abb565b6103e860006105256102c5565b905060016006600061053561063b565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905561056e61056861063b565b8361086f565b6105788282610d68565b6105806102c5565b1461059b57634e487b7160e01b600052600160045260246000fd5b5050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105d261063b565b6001600160a01b03166105e3610427565b6001600160a01b0316146106095760405162461bcd60e51b815260040161033c90610c17565b6001600160a01b03811661062f5760405162461bcd60e51b815260040161033c90610b01565b6106388161081d565b50565b3390565b6001600160a01b0383166106655760405162461bcd60e51b815260040161033c90610c91565b6001600160a01b03821661068b5760405162461bcd60e51b815260040161033c90610b47565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906106e6908590610d51565b60405180910390a3505050565b6001600160a01b0383166107195760405162461bcd60e51b815260040161033c90610c4c565b6001600160a01b03821661073f5760405162461bcd60e51b815260040161033c90610a78565b61074a838383610933565b6001600160a01b038316600090815260208190526040902054818110156107835760405162461bcd60e51b815260040161033c90610b89565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906107ba908490610d68565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108049190610d51565b60405180910390a3610817848484610933565b50505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166108955760405162461bcd60e51b815260040161033c90610d1a565b6108a160008383610933565b80600260008282546108b39190610d68565b90915550506001600160a01b038216600090815260208190526040812080548392906108e0908490610d68565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610923908590610d51565b60405180910390a361059b600083835b505050565b80356001600160a01b03811681146103d757600080fd5b600060208284031215610960578081fd5b61096982610938565b9392505050565b60008060408385031215610982578081fd5b61098b83610938565b915061099960208401610938565b90509250929050565b6000806000606084860312156109b6578081fd5b6109bf84610938565b92506109cd60208501610938565b9150604084013590509250925092565b600080604083850312156109ef578182fd5b6109f883610938565b946020939093013593505050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b81811015610a5157858101830151858201604001528201610a35565b81811115610a625783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526026908201527f596f7520616c726561647920636c61696d656420796f757220667265652042616040820152653730b730b99760d11b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610d8757634e487b7160e01b81526011600452602481fd5b500190565b600281046001821680610da057607f821691505b60208210811415610dc157634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220ef0b9684bdaa92a721dbe95fd306f5eb275c879c7de302d773b1fd019f531f8e64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:396:23",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:23",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "69:325:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "79:22:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "93:4:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "99:1:23",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "89:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:12:23"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "79:6:23"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "110:38:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "140:4:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "146:1:23",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "136:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "136:12:23"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "114:18:23",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "187:31:23",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "189:27:23",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "203:6:23"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "211:4:23",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "199:3:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "199:17:23"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "189:6:23"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "167:18:23"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:26:23"
                  },
                  "nodeType": "YulIf",
                  "src": "157:2:23"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "277:111:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "298:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "305:3:23",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "310:10:23",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "301:3:23"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "301:20:23"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "291:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "291:31:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "291:31:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "342:1:23",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "345:4:23",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "335:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "335:15:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "335:15:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "370:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "373:4:23",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "363:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "363:15:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "363:15:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "233:18:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "264:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "253:2:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "253:14:23"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "230:2:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "230:38:23"
                  },
                  "nodeType": "YulIf",
                  "src": "227:2:23"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "49:4:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "58:6:23",
                "type": ""
              }
            ],
            "src": "14:380:23"
          }
        ]
      },
      "contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 23,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7664:23",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:23",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:23"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:23"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:23",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:23"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:23"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:23",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:23",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:23"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:23"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:23",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:23"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:23"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:23"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:23"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:23"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:23"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:23",
                "type": ""
              }
            ],
            "src": "14:175:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "264:128:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:26:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "319:6:23"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "327:6:23"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "312:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "312:22:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "312:22:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "285:7:23"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "294:9:23"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "281:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "281:23:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "306:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "277:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:32:23"
                  },
                  "nodeType": "YulIf",
                  "src": "274:2:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "345:41:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "376:9:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "355:20:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:31:23"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "230:9:23",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "241:7:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "253:6:23",
                "type": ""
              }
            ],
            "src": "194:198:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "484:187:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "530:26:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "539:6:23"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "547:6:23"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "532:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "532:22:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "532:22:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "505:7:23"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "514:9:23"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "501:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "501:23:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "526:2:23",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "497:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:32:23"
                  },
                  "nodeType": "YulIf",
                  "src": "494:2:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "565:41:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "596:9:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "575:20:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "575:31:23"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "565:6:23"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "615:50:23",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "650:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "661:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "646:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "646:18:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "625:20:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "625:40:23"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "615:6:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "442:9:23",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "453:7:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "465:6:23",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "473:6:23",
                "type": ""
              }
            ],
            "src": "397:274:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "780:238:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "826:26:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "835:6:23"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "843:6:23"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "828:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "828:22:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "828:22:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "801:7:23"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "810:9:23"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "797:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "797:23:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "822:2:23",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "793:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "793:32:23"
                  },
                  "nodeType": "YulIf",
                  "src": "790:2:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "861:41:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "892:9:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "871:20:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "871:31:23"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "861:6:23"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "911:50:23",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "946:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "957:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "942:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "942:18:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "921:20:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "921:40:23"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "911:6:23"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "970:42:23",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "997:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1008:2:23",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "993:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "993:18:23"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "980:12:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:32:23"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "970:6:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "730:9:23",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "741:7:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "753:6:23",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "761:6:23",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "769:6:23",
                "type": ""
              }
            ],
            "src": "676:342:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1110:179:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1156:26:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1165:6:23"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1173:6:23"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1158:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1158:22:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1158:22:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1131:7:23"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1140:9:23"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1127:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1127:23:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1152:2:23",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1123:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:32:23"
                  },
                  "nodeType": "YulIf",
                  "src": "1120:2:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1191:41:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1222:9:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1201:20:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1201:31:23"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1191:6:23"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1241:42:23",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1268:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1279:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1264:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1264:18:23"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1251:12:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:32:23"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1241:6:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1068:9:23",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1079:7:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1091:6:23",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1099:6:23",
                "type": ""
              }
            ],
            "src": "1023:266:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1395:102:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1405:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1417:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1428:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1413:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1413:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1405:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1447:9:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1462:6:23"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1478:3:23",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1483:1:23",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1474:3:23"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1474:11:23"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1487:1:23",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1470:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1470:19:23"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1458:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1458:32:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1440:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1440:51:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1440:51:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1364:9:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1375:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1386:4:23",
                "type": ""
              }
            ],
            "src": "1294:203:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1597:92:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1607:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1619:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1630:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1615:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1615:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1607:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1649:9:23"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1674:6:23"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1667:6:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1667:14:23"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1660:6:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1660:22:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1642:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1642:41:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1642:41:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1566:9:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1577:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1588:4:23",
                "type": ""
              }
            ],
            "src": "1502:187:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1815:482:23",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1825:12:23",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1835:2:23",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1829:2:23",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1853:9:23"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1864:2:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1846:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1846:21:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1846:21:23"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1876:27:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1896:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1890:5:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1890:13:23"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1880:6:23",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1923:9:23"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1934:2:23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1919:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1919:18:23"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1939:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1912:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1912:34:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1912:34:23"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1955:13:23",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "1964:4:23"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1959:1:23",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2027:90:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2056:9:23"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2067:1:23"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2052:3:23"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2052:17:23"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2071:2:23",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2048:3:23"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2048:26:23"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2090:6:23"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2098:1:23"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2086:3:23"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2086:14:23"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2102:2:23"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2082:3:23"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2082:23:23"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2076:5:23"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2076:30:23"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2041:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2041:66:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2041:66:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1988:1:23"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1991:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1985:2:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1985:13:23"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1999:19:23",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2001:15:23",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2010:1:23"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2013:2:23"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2006:3:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2006:10:23"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2001:1:23"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1981:3:23",
                    "statements": []
                  },
                  "src": "1977:140:23"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2151:69:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2180:9:23"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "2191:6:23"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2176:3:23"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2176:22:23"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2200:2:23",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2172:3:23"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2172:31:23"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "2205:4:23"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2165:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2165:45:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2165:45:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2132:1:23"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2135:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2129:2:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2129:13:23"
                  },
                  "nodeType": "YulIf",
                  "src": "2126:2:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2229:62:23",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2245:9:23"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2264:6:23"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2272:2:23",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2260:3:23"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2260:15:23"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2281:2:23",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2277:3:23"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2277:7:23"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2256:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2256:29:23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2241:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2241:45:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2288:2:23",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2237:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2237:54:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2229:4:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1784:9:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1795:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1806:4:23",
                "type": ""
              }
            ],
            "src": "1694:603:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2476:225:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2493:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2504:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2486:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2486:21:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2486:21:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2527:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2538:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2523:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2523:18:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2543:2:23",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2516:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2516:30:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2516:30:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2566:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2577:2:23",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2562:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2562:18:23"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2582:34:23",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2555:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2555:62:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2555:62:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2637:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2648:2:23",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2633:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2633:18:23"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2653:5:23",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2626:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2626:33:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2626:33:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2668:27:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2680:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2691:3:23",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2676:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2676:19:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2668:4:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2453:9:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2467:4:23",
                "type": ""
              }
            ],
            "src": "2302:399:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2880:228:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2897:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2908:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2890:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2890:21:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2890:21:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2931:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2942:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2927:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2927:18:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2947:2:23",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2920:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2920:30:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2920:30:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2970:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2981:2:23",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2966:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2966:18:23"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2986:34:23",
                        "type": "",
                        "value": "You already claimed your free Ba"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2959:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2959:62:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2959:62:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3041:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3052:2:23",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3037:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3037:18:23"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3057:8:23",
                        "type": "",
                        "value": "nanas."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3030:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3030:36:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3030:36:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3075:27:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3087:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3098:3:23",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3083:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3083:19:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3075:4:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2366836c4c136ec9f18569874e2175d06b3914b630d9e555f22640fb1d81132d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2857:9:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2871:4:23",
                "type": ""
              }
            ],
            "src": "2706:402:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3287:228:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3304:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3315:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3297:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3297:21:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3297:21:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3338:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3349:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3334:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3334:18:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3354:2:23",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3327:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3327:30:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3327:30:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3377:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3388:2:23",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3373:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3373:18:23"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3393:34:23",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3366:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3366:62:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3366:62:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3448:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3459:2:23",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3444:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3444:18:23"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3464:8:23",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3437:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3437:36:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3437:36:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3482:27:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3494:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3505:3:23",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3490:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3490:19:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3482:4:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3264:9:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3278:4:23",
                "type": ""
              }
            ],
            "src": "3113:402:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3694:224:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3711:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3722:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3704:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3704:21:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3704:21:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3745:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3756:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3741:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3741:18:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3761:2:23",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3734:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3734:30:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3734:30:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3784:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3795:2:23",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3780:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3780:18:23"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3800:34:23",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3773:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3773:62:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3773:62:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3855:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3866:2:23",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3851:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3851:18:23"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3871:4:23",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3844:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3844:32:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3844:32:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3885:27:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3897:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3908:3:23",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3893:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3893:19:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3885:4:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3671:9:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3685:4:23",
                "type": ""
              }
            ],
            "src": "3520:398:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4097:228:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4114:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4125:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4107:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4107:21:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4107:21:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4148:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4159:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4144:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4144:18:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4164:2:23",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4137:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4137:30:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4137:30:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4187:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4198:2:23",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4183:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4183:18:23"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4203:34:23",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4176:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4176:62:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4176:62:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4258:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4269:2:23",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4254:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4254:18:23"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4274:8:23",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4247:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4247:36:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4247:36:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4292:27:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4304:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4315:3:23",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4300:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4300:19:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4292:4:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4074:9:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4088:4:23",
                "type": ""
              }
            ],
            "src": "3923:402:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4504:230:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4521:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4532:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4514:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4514:21:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4514:21:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4555:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4566:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4551:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4551:18:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4571:2:23",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4544:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4544:30:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4544:30:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4594:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4605:2:23",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4590:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4590:18:23"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4610:34:23",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4583:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4583:62:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4583:62:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4665:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4676:2:23",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4661:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4661:18:23"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4681:10:23",
                        "type": "",
                        "value": "llowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4654:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4654:38:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4654:38:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4701:27:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4713:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4724:3:23",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4709:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4709:19:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4701:4:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4481:9:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4495:4:23",
                "type": ""
              }
            ],
            "src": "4330:404:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4913:182:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4930:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4941:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4923:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4923:21:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4923:21:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4964:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4975:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4960:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4960:18:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4980:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4953:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4953:30:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4953:30:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5003:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5014:2:23",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4999:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4999:18:23"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5019:34:23",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4992:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4992:62:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4992:62:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5063:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5075:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5086:2:23",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5071:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5071:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5063:4:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4890:9:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4904:4:23",
                "type": ""
              }
            ],
            "src": "4739:356:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5274:227:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5291:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5302:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5284:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5284:21:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5284:21:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5325:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5336:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5321:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5321:18:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5341:2:23",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5314:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5314:30:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5314:30:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5364:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5375:2:23",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5360:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5360:18:23"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5380:34:23",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5353:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5353:62:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5353:62:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5435:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5446:2:23",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5431:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5431:18:23"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5451:7:23",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5424:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5424:35:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5424:35:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5468:27:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5480:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5491:3:23",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5476:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5476:19:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5468:4:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5251:9:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5265:4:23",
                "type": ""
              }
            ],
            "src": "5100:401:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5680:226:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5697:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5708:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5690:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5690:21:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5690:21:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5731:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5742:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5727:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5727:18:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5747:2:23",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5720:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5720:30:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5720:30:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5770:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5781:2:23",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5766:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5766:18:23"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5786:34:23",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5759:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5759:62:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5759:62:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5841:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5852:2:23",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5837:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5837:18:23"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5857:6:23",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5830:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5830:34:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5830:34:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5873:27:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5885:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5896:3:23",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5881:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5881:19:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5873:4:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5657:9:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5671:4:23",
                "type": ""
              }
            ],
            "src": "5506:400:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6085:227:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6102:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6113:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6095:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6095:21:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6095:21:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6136:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6147:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6132:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6132:18:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6152:2:23",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6125:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6125:30:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6125:30:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6175:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6186:2:23",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6171:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6171:18:23"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6191:34:23",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6164:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6164:62:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6164:62:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6246:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6257:2:23",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6242:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6242:18:23"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6262:7:23",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6235:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6235:35:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6235:35:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6279:27:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6291:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6302:3:23",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6287:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6287:19:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6279:4:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6062:9:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6076:4:23",
                "type": ""
              }
            ],
            "src": "5911:401:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6491:181:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6508:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6519:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6501:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6501:21:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6501:21:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6542:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6553:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6538:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6538:18:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6558:2:23",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6531:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6531:30:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6531:30:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6581:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6592:2:23",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6577:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6577:18:23"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6597:33:23",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6570:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6570:61:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6570:61:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6640:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6652:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6663:2:23",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6648:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6648:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6640:4:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6468:9:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6482:4:23",
                "type": ""
              }
            ],
            "src": "6317:355:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6778:76:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6788:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6800:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6811:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6796:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6796:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6788:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6830:9:23"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6841:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6823:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6823:25:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6823:25:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6747:9:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6758:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6769:4:23",
                "type": ""
              }
            ],
            "src": "6677:177:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6956:87:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6966:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6978:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6989:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6974:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6974:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6966:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7008:9:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7023:6:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7031:4:23",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7019:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7019:17:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7001:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7001:36:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7001:36:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6925:9:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6936:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6947:4:23",
                "type": ""
              }
            ],
            "src": "6859:184:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7096:181:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7131:115:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "7152:3:23"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7161:3:23",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7166:10:23",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "7157:3:23"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7157:20:23"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7145:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7145:33:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7145:33:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7198:1:23",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7201:4:23",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7191:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7191:15:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7191:15:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "7226:3:23"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7231:4:23",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7219:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7219:17:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7219:17:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7112:1:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7119:1:23"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7115:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7115:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7109:2:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7109:13:23"
                  },
                  "nodeType": "YulIf",
                  "src": "7106:2:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7255:16:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7266:1:23"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7269:1:23"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7262:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7262:9:23"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "7255:3:23"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7079:1:23",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7082:1:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "7088:3:23",
                "type": ""
              }
            ],
            "src": "7048:229:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7337:325:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7347:22:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7361:4:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7367:1:23",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "7357:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7357:12:23"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7347:6:23"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7378:38:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7408:4:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7414:1:23",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7404:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7404:12:23"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "7382:18:23",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7455:31:23",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7457:27:23",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "7471:6:23"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7479:4:23",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "7467:3:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7467:17:23"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7457:6:23"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7435:18:23"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7428:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7428:26:23"
                  },
                  "nodeType": "YulIf",
                  "src": "7425:2:23"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7545:111:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7566:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7573:3:23",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7578:10:23",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "7569:3:23"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7569:20:23"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7559:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7559:31:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7559:31:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7610:1:23",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7613:4:23",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7603:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7603:15:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7603:15:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7638:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7641:4:23",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7631:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7631:15:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7631:15:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7501:18:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7524:6:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7532:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7521:2:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7521:14:23"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7498:2:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7498:38:23"
                  },
                  "nodeType": "YulIf",
                  "src": "7495:2:23"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "7317:4:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7326:6:23",
                "type": ""
              }
            ],
            "src": "7282:380:23"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2366836c4c136ec9f18569874e2175d06b3914b630d9e555f22640fb1d81132d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"You already claimed your free Ba\")\n        mstore(add(headStart, 96), \"nanas.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 23,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "180:945:18:-:0;;;360:52;;;;;;;;;-1:-1:-1;1958:116:3;;;;;;;;;;;-1:-1:-1;;;1958:116:3;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1958:116:3;;;;2025:13;;1958:116;;;2025:13;;:5;;:13;:::i;:::-;-1:-1:-1;2049:17:3;;;;:7;;:17;;;;;:::i;:::-;;1958:116;;894:23:0;904:12;:10;;;:12;;:::i;:::-;894:9;:23::i;:::-;180:945:18;;602:98:13;682:10;602:98;:::o;2106:173:0:-;2181:6;;;-1:-1:-1;;;;;2198:17:0;;;-1:-1:-1;;;;;;2198:17:0;;;;;;;2231:40;;2181:6;;;2198:17;2181:6;;2231:40;;2162:16;;2231:40;2106:173;;:::o;180:945:18:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:945:18;;;-1:-1:-1;180:945:18;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:23;99:1;89:12;;146:1;136:12;;;157:2;;211:4;203:6;199:17;189:27;;157:2;264;256:6;253:14;233:18;230:38;227:2;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:2;;69:325;;;:::o;:::-;180:945:18;;;;;;",
  "deployedSourceMap": "180:945:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2144:100:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4311:169;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3264:108::-;;;:::i;:::-;;;;;;;:::i;4962:492::-;;;;;;:::i;:::-;;:::i;3106:93::-;;;:::i;:::-;;;;;;;:::i;5863:215::-;;;;;;:::i;:::-;;:::i;3435:127::-;;;;;;:::i;:::-;;:::i;1657:94:0:-;;;:::i;:::-;;1006:87;;;:::i;:::-;;;;;;;:::i;2363:104:3:-;;;:::i;6581:413::-;;;;;;:::i;:::-;;:::i;3775:175::-;;;;;;:::i;:::-;;:::i;518:604:18:-;;;:::i;4013:151:3:-;;;;;;:::i;:::-;;:::i;1906:192:0:-;;;;;;:::i;:::-;;:::i;2144:100:3:-;2198:13;2231:5;2224:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2144:100;:::o;4311:169::-;4394:4;4411:39;4420:12;:10;:12::i;:::-;4434:7;4443:6;4411:8;:39::i;:::-;-1:-1:-1;4468:4:3;4311:169;;;;:::o;3264:108::-;3352:12;;3264:108;:::o;4962:492::-;5102:4;5119:36;5129:6;5137:9;5148:6;5119:9;:36::i;:::-;-1:-1:-1;;;;;5195:19:3;;5168:24;5195:19;;;:11;:19;;;;;5168:24;5215:12;:10;:12::i;:::-;-1:-1:-1;;;;;5195:33:3;-1:-1:-1;;;;;5195:33:3;;;;;;;;;;;;;5168:60;;5267:6;5247:16;:26;;5239:79;;;;-1:-1:-1;;;5239:79:3;;;;;;;:::i;:::-;;;;;;;;;5354:57;5363:6;5371:12;:10;:12::i;:::-;5404:6;5385:16;:25;5354:8;:57::i;:::-;-1:-1:-1;5442:4:3;;4962:492;-1:-1:-1;;;;4962:492:3:o;3106:93::-;3189:2;3106:93;:::o;5863:215::-;5951:4;5968:80;5977:12;:10;:12::i;:::-;5991:7;6037:10;6000:11;:25;6012:12;:10;:12::i;:::-;-1:-1:-1;;;;;6000:25:3;;;;;;;;;;;;;;;;;-1:-1:-1;6000:25:3;;;:34;;;;;;;;;;:47;;;;:::i;:::-;5968:8;:80::i;3435:127::-;-1:-1:-1;;;;;3536:18:3;;3509:7;3536:18;;;;;;;;;;;3435:127;;;;:::o;1657:94:0:-;1237:12;:10;:12::i;:::-;-1:-1:-1;;;;;1226:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1226:23:0;;1218:68;;;;-1:-1:-1;;;1218:68:0;;;;;;;:::i;:::-;1722:21:::1;1740:1;1722:9;:21::i;:::-;1657:94::o:0;1006:87::-;1079:6;;-1:-1:-1;;;;;1079:6:0;1006:87;:::o;2363:104:3:-;2419:13;2452:7;2445:14;;;;;:::i;6581:413::-;6674:4;6691:24;6718:11;:25;6730:12;:10;:12::i;:::-;-1:-1:-1;;;;;6718:25:3;;;;;;;;;;;;;;;;;-1:-1:-1;6718:25:3;;;:34;;;;;;;;;;;-1:-1:-1;6771:35:3;;;;6763:85;;;;-1:-1:-1;;;6763:85:3;;;;;;;:::i;:::-;6884:67;6893:12;:10;:12::i;:::-;6907:7;6935:15;6916:16;:34;6884:8;:67::i;:::-;-1:-1:-1;6982:4:3;;6581:413;-1:-1:-1;;;6581:413:3:o;3775:175::-;3861:4;3878:42;3888:12;:10;:12::i;:::-;3902:9;3913:6;3878:9;:42::i;518:604:18:-;632:16;:30;649:12;:10;:12::i;:::-;-1:-1:-1;;;;;632:30:18;;;;;;;;;;;;-1:-1:-1;632:30:18;;;;:39;624:90;;;;-1:-1:-1;;;624:90:18;;;;;;;:::i;:::-;772:4;749:20;813:13;:11;:13::i;:::-;787:39;;897:4;864:16;:30;881:12;:10;:12::i;:::-;-1:-1:-1;;;;;864:30:18;;;;;;;;;;;;-1:-1:-1;864:30:18;:37;;-1:-1:-1;;864:37:18;;;;;;;;;;954:33;960:12;:10;:12::i;:::-;974;954:5;:33::i;:::-;1083:30;1101:12;1083:15;:30;:::i;:::-;1066:13;:11;:13::i;:::-;:47;1059:55;;-1:-1:-1;;;1059:55:18;;;;;;;;;518:604;;:::o;4013:151:3:-;-1:-1:-1;;;;;4129:18:3;;;4102:7;4129:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4013:151::o;1906:192:0:-;1237:12;:10;:12::i;:::-;-1:-1:-1;;;;;1226:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1226:23:0;;1218:68;;;;-1:-1:-1;;;1218:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1995:22:0;::::1;1987:73;;;;-1:-1:-1::0;;;1987:73:0::1;;;;;;;:::i;:::-;2071:19;2081:8;2071:9;:19::i;:::-;1906:192:::0;:::o;602:98:13:-;682:10;602:98;:::o;10265:380:3:-;-1:-1:-1;;;;;10401:19:3;;10393:68;;;;-1:-1:-1;;;10393:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;10480:21:3;;10472:68;;;;-1:-1:-1;;;10472:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;10553:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;10605:32;;;;;10583:6;;10605:32;:::i;:::-;;;;;;;;10265:380;;;:::o;7484:733::-;-1:-1:-1;;;;;7624:20:3;;7616:70;;;;-1:-1:-1;;;7616:70:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;7705:23:3;;7697:71;;;;-1:-1:-1;;;7697:71:3;;;;;;;:::i;:::-;7781:47;7802:6;7810:9;7821:6;7781:20;:47::i;:::-;-1:-1:-1;;;;;7865:17:3;;7841:21;7865:17;;;;;;;;;;;7901:23;;;;7893:74;;;;-1:-1:-1;;;7893:74:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;8003:17:3;;;:9;:17;;;;;;;;;;;8023:22;;;8003:42;;8067:20;;;;;;;;:30;;8039:6;;8003:9;8067:30;;8039:6;;8067:30;:::i;:::-;;;;;;;;8132:9;-1:-1:-1;;;;;8115:35:3;8124:6;-1:-1:-1;;;;;8115:35:3;;8143:6;8115:35;;;;;;:::i;:::-;;;;;;;;8163:46;8183:6;8191:9;8202:6;8163:19;:46::i;:::-;7484:733;;;;:::o;2106:173:0:-;2181:6;;;-1:-1:-1;;;;;2198:17:0;;;-1:-1:-1;;;;;;2198:17:0;;;;;;;2231:40;;2181:6;;;2198:17;2181:6;;2231:40;;2162:16;;2231:40;2106:173;;:::o;8504:399:3:-;-1:-1:-1;;;;;8588:21:3;;8580:65;;;;-1:-1:-1;;;8580:65:3;;;;;;;:::i;:::-;8658:49;8687:1;8691:7;8700:6;8658:20;:49::i;:::-;8736:6;8720:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8753:18:3;;:9;:18;;;;;;;;;;:28;;8775:6;;8753:9;:28;;8775:6;;8753:28;:::i;:::-;;;;-1:-1:-1;;8797:37:3;;-1:-1:-1;;;;;8797:37:3;;;8814:1;;8797:37;;;;8827:6;;8797:37;:::i;:::-;;;;;;;;8847:48;8875:1;8879:7;8888:6;11245:125;;;;:::o;14:175:23:-;84:20;;-1:-1:-1;;;;;133:31:23;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:23:o;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:23:o;1294:203::-;-1:-1:-1;;;;;1458:32:23;;;;1440:51;;1428:2;1413:18;;1395:102::o;1502:187::-;1667:14;;1660:22;1642:41;;1630:2;1615:18;;1597:92::o;1694:603::-;;1835:2;1864;1853:9;1846:21;1896:6;1890:13;1939:6;1934:2;1923:9;1919:18;1912:34;1964:4;1977:140;1991:6;1988:1;1985:13;1977:140;;;2086:14;;;2082:23;;2076:30;2052:17;;;2071:2;2048:26;2041:66;2006:10;;1977:140;;;2135:6;2132:1;2129:13;2126:2;;;2205:4;2200:2;2191:6;2180:9;2176:22;2172:31;2165:45;2126:2;-1:-1:-1;2281:2:23;2260:15;-1:-1:-1;;2256:29:23;2241:45;;;;2288:2;2237:54;;1815:482;-1:-1:-1;;;1815:482:23:o;2302:399::-;2504:2;2486:21;;;2543:2;2523:18;;;2516:30;2582:34;2577:2;2562:18;;2555:62;-1:-1:-1;;;2648:2:23;2633:18;;2626:33;2691:3;2676:19;;2476:225::o;2706:402::-;2908:2;2890:21;;;2947:2;2927:18;;;2920:30;2986:34;2981:2;2966:18;;2959:62;-1:-1:-1;;;3052:2:23;3037:18;;3030:36;3098:3;3083:19;;2880:228::o;3113:402::-;3315:2;3297:21;;;3354:2;3334:18;;;3327:30;3393:34;3388:2;3373:18;;3366:62;-1:-1:-1;;;3459:2:23;3444:18;;3437:36;3505:3;3490:19;;3287:228::o;3520:398::-;3722:2;3704:21;;;3761:2;3741:18;;;3734:30;3800:34;3795:2;3780:18;;3773:62;-1:-1:-1;;;3866:2:23;3851:18;;3844:32;3908:3;3893:19;;3694:224::o;3923:402::-;4125:2;4107:21;;;4164:2;4144:18;;;4137:30;4203:34;4198:2;4183:18;;4176:62;-1:-1:-1;;;4269:2:23;4254:18;;4247:36;4315:3;4300:19;;4097:228::o;4330:404::-;4532:2;4514:21;;;4571:2;4551:18;;;4544:30;4610:34;4605:2;4590:18;;4583:62;-1:-1:-1;;;4676:2:23;4661:18;;4654:38;4724:3;4709:19;;4504:230::o;4739:356::-;4941:2;4923:21;;;4960:18;;;4953:30;5019:34;5014:2;4999:18;;4992:62;5086:2;5071:18;;4913:182::o;5100:401::-;5302:2;5284:21;;;5341:2;5321:18;;;5314:30;5380:34;5375:2;5360:18;;5353:62;-1:-1:-1;;;5446:2:23;5431:18;;5424:35;5491:3;5476:19;;5274:227::o;5506:400::-;5708:2;5690:21;;;5747:2;5727:18;;;5720:30;5786:34;5781:2;5766:18;;5759:62;-1:-1:-1;;;5852:2:23;5837:18;;5830:34;5896:3;5881:19;;5680:226::o;5911:401::-;6113:2;6095:21;;;6152:2;6132:18;;;6125:30;6191:34;6186:2;6171:18;;6164:62;-1:-1:-1;;;6257:2:23;6242:18;;6235:35;6302:3;6287:19;;6085:227::o;6317:355::-;6519:2;6501:21;;;6558:2;6538:18;;;6531:30;6597:33;6592:2;6577:18;;6570:61;6663:2;6648:18;;6491:181::o;6677:177::-;6823:25;;;6811:2;6796:18;;6778:76::o;6859:184::-;7031:4;7019:17;;;;7001:36;;6989:2;6974:18;;6956:87::o;7048:229::-;;7119:1;7115:6;7112:1;7109:13;7106:2;;;-1:-1:-1;;;7145:33:23;;7201:4;7198:1;7191:15;7231:4;7152:3;7219:17;7106:2;-1:-1:-1;7262:9:23;;7096:181::o;7282:380::-;7367:1;7357:12;;7414:1;7404:12;;;7425:2;;7479:4;7471:6;7467:17;7457:27;;7425:2;7532;7524:6;7521:14;7501:18;7498:38;7495:2;;;7578:10;7573:3;7569:20;7566:1;7559:31;7613:4;7610:1;7603:15;7641:4;7638:1;7631:15;7495:2;;7337:325;;;:::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract BananaToken is ERC20, Ownable{\r\n    // mapping that stores whether an address has already claimed their free tokens\r\n    mapping(address => bool) hasClaimedTokens;\r\n\r\n    constructor() ERC20(\"BananaToken\", \"BANANA\"){\r\n    }\r\n\r\n    // claim tokens by minting to _msgSender(), limited to 1000 tokens per address, one time use\r\n    function getBananas() public{\r\n        // requiring that address has not claimed free tokens yet\r\n        require(hasClaimedTokens[_msgSender()] == false, \"You already claimed your free Bananas.\");\r\n        // claim limit\r\n        uint256 _claimAmount = 1000;\r\n        uint256 _oldTotalSupply = totalSupply();\r\n        // update mapping\r\n        hasClaimedTokens[_msgSender()] = true;\r\n        // mint tokens, receiver, amount\r\n        _mint(_msgSender(), _claimAmount);\r\n        // to validate that totalSupply is updated properly\r\n        assert(totalSupply() == _oldTotalSupply + _claimAmount);\r\n    }\r\n}",
  "sourcePath": "C:\\code\\github\\CryptoMonkeys\\contracts\\BananaToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/BananaToken.sol",
    "exportedSymbols": {
      "BananaToken": [
        3166
      ],
      "Context": [
        2549
      ],
      "ERC20": [
        781
      ],
      "IERC20": [
        859
      ],
      "IERC20Metadata": [
        884
      ],
      "Ownable": [
        103
      ]
    },
    "id": 3167,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3102,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:18"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3103,
        "nodeType": "ImportDirective",
        "scope": 3167,
        "sourceUnit": 782,
        "src": "67:55:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3104,
        "nodeType": "ImportDirective",
        "scope": 3167,
        "sourceUnit": 104,
        "src": "124:52:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3105,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 781,
              "src": "204:5:18"
            },
            "id": 3106,
            "nodeType": "InheritanceSpecifier",
            "src": "204:5:18"
          },
          {
            "baseName": {
              "id": 3107,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 103,
              "src": "211:7:18"
            },
            "id": 3108,
            "nodeType": "InheritanceSpecifier",
            "src": "211:7:18"
          }
        ],
        "contractDependencies": [
          103,
          781,
          859,
          884,
          2549
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3166,
        "linearizedBaseContracts": [
          3166,
          103,
          781,
          884,
          859,
          2549
        ],
        "name": "BananaToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3112,
            "mutability": "mutable",
            "name": "hasClaimedTokens",
            "nodeType": "VariableDeclaration",
            "scope": 3166,
            "src": "310:41:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3111,
              "keyType": {
                "id": 3109,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "318:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "310:24:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3110,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "329:4:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3119,
              "nodeType": "Block",
              "src": "404:8:18",
              "statements": []
            },
            "id": 3120,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "42616e616e61546f6b656e",
                    "id": 3115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "380:13:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bf01d5fc9fd15df298b1584a210cce0fe9cfe0633ffbdae7432adaf0288e65ef",
                      "typeString": "literal_string \"BananaToken\""
                    },
                    "value": "BananaToken"
                  },
                  {
                    "hexValue": "42414e414e41",
                    "id": 3116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "395:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0b89facb1a2c6f00c78330d3e775c00ebe0f0485b995c2e024ad890f56b33bff",
                      "typeString": "literal_string \"BANANA\""
                    },
                    "value": "BANANA"
                  }
                ],
                "id": 3117,
                "modifierName": {
                  "id": 3114,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 781,
                  "src": "374:5:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "374:30:18"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "371:2:18"
            },
            "returnParameters": {
              "id": 3118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "404:0:18"
            },
            "scope": 3166,
            "src": "360:52:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3164,
              "nodeType": "Block",
              "src": "546:576:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3124,
                            "name": "hasClaimedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3112,
                            "src": "632:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3127,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3125,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2539,
                              "src": "649:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 3126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "649:12:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "632:30:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 3128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "666:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "632:39:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520616c726561647920636c61696d656420796f757220667265652042616e616e61732e",
                        "id": 3130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "673:40:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2366836c4c136ec9f18569874e2175d06b3914b630d9e555f22640fb1d81132d",
                          "typeString": "literal_string \"You already claimed your free Bananas.\""
                        },
                        "value": "You already claimed your free Bananas."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2366836c4c136ec9f18569874e2175d06b3914b630d9e555f22640fb1d81132d",
                          "typeString": "literal_string \"You already claimed your free Bananas.\""
                        }
                      ],
                      "id": 3123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "624:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "624:90:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3132,
                  "nodeType": "ExpressionStatement",
                  "src": "624:90:18"
                },
                {
                  "assignments": [
                    3134
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3134,
                      "mutability": "mutable",
                      "name": "_claimAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 3164,
                      "src": "749:20:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3133,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "749:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3136,
                  "initialValue": {
                    "hexValue": "31303030",
                    "id": 3135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "772:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    },
                    "value": "1000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "749:27:18"
                },
                {
                  "assignments": [
                    3138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3138,
                      "mutability": "mutable",
                      "name": "_oldTotalSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 3164,
                      "src": "787:23:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3137,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "787:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3141,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3139,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 320,
                      "src": "813:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 3140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "813:13:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "787:39:18"
                },
                {
                  "expression": {
                    "id": 3147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3142,
                        "name": "hasClaimedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3112,
                        "src": "864:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3145,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3143,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2539,
                          "src": "881:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "881:12:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "864:30:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "897:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "864:37:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3148,
                  "nodeType": "ExpressionStatement",
                  "src": "864:37:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3150,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2539,
                          "src": "960:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "960:12:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3152,
                        "name": "_claimAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3134,
                        "src": "974:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3149,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 641,
                      "src": "954:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "954:33:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3154,
                  "nodeType": "ExpressionStatement",
                  "src": "954:33:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3156,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 320,
                            "src": "1066:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 3157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1066:13:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3158,
                            "name": "_oldTotalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3138,
                            "src": "1083:15:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 3159,
                            "name": "_claimAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3134,
                            "src": "1101:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1083:30:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1066:47:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3155,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "1059:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1059:55:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3163,
                  "nodeType": "ExpressionStatement",
                  "src": "1059:55:18"
                }
              ]
            },
            "functionSelector": "d053407b",
            "id": 3165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBananas",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "537:2:18"
            },
            "returnParameters": {
              "id": 3122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "546:0:18"
            },
            "scope": 3166,
            "src": "518:604:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3167,
        "src": "180:945:18"
      }
    ],
    "src": "40:1085:18"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/BananaToken.sol",
    "exportedSymbols": {
      "BananaToken": [
        3166
      ],
      "Context": [
        2549
      ],
      "ERC20": [
        781
      ],
      "IERC20": [
        859
      ],
      "IERC20Metadata": [
        884
      ],
      "Ownable": [
        103
      ]
    },
    "id": 3167,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3102,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:18"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3103,
        "nodeType": "ImportDirective",
        "scope": 3167,
        "sourceUnit": 782,
        "src": "67:55:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3104,
        "nodeType": "ImportDirective",
        "scope": 3167,
        "sourceUnit": 104,
        "src": "124:52:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3105,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 781,
              "src": "204:5:18"
            },
            "id": 3106,
            "nodeType": "InheritanceSpecifier",
            "src": "204:5:18"
          },
          {
            "baseName": {
              "id": 3107,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 103,
              "src": "211:7:18"
            },
            "id": 3108,
            "nodeType": "InheritanceSpecifier",
            "src": "211:7:18"
          }
        ],
        "contractDependencies": [
          103,
          781,
          859,
          884,
          2549
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3166,
        "linearizedBaseContracts": [
          3166,
          103,
          781,
          884,
          859,
          2549
        ],
        "name": "BananaToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3112,
            "mutability": "mutable",
            "name": "hasClaimedTokens",
            "nodeType": "VariableDeclaration",
            "scope": 3166,
            "src": "310:41:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3111,
              "keyType": {
                "id": 3109,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "318:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "310:24:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3110,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "329:4:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3119,
              "nodeType": "Block",
              "src": "404:8:18",
              "statements": []
            },
            "id": 3120,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "42616e616e61546f6b656e",
                    "id": 3115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "380:13:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bf01d5fc9fd15df298b1584a210cce0fe9cfe0633ffbdae7432adaf0288e65ef",
                      "typeString": "literal_string \"BananaToken\""
                    },
                    "value": "BananaToken"
                  },
                  {
                    "hexValue": "42414e414e41",
                    "id": 3116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "395:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0b89facb1a2c6f00c78330d3e775c00ebe0f0485b995c2e024ad890f56b33bff",
                      "typeString": "literal_string \"BANANA\""
                    },
                    "value": "BANANA"
                  }
                ],
                "id": 3117,
                "modifierName": {
                  "id": 3114,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 781,
                  "src": "374:5:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "374:30:18"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "371:2:18"
            },
            "returnParameters": {
              "id": 3118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "404:0:18"
            },
            "scope": 3166,
            "src": "360:52:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3164,
              "nodeType": "Block",
              "src": "546:576:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3124,
                            "name": "hasClaimedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3112,
                            "src": "632:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3127,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3125,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2539,
                              "src": "649:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 3126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "649:12:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "632:30:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 3128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "666:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "632:39:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520616c726561647920636c61696d656420796f757220667265652042616e616e61732e",
                        "id": 3130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "673:40:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2366836c4c136ec9f18569874e2175d06b3914b630d9e555f22640fb1d81132d",
                          "typeString": "literal_string \"You already claimed your free Bananas.\""
                        },
                        "value": "You already claimed your free Bananas."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2366836c4c136ec9f18569874e2175d06b3914b630d9e555f22640fb1d81132d",
                          "typeString": "literal_string \"You already claimed your free Bananas.\""
                        }
                      ],
                      "id": 3123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "624:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "624:90:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3132,
                  "nodeType": "ExpressionStatement",
                  "src": "624:90:18"
                },
                {
                  "assignments": [
                    3134
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3134,
                      "mutability": "mutable",
                      "name": "_claimAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 3164,
                      "src": "749:20:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3133,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "749:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3136,
                  "initialValue": {
                    "hexValue": "31303030",
                    "id": 3135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "772:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    },
                    "value": "1000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "749:27:18"
                },
                {
                  "assignments": [
                    3138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3138,
                      "mutability": "mutable",
                      "name": "_oldTotalSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 3164,
                      "src": "787:23:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3137,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "787:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3141,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3139,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 320,
                      "src": "813:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 3140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "813:13:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "787:39:18"
                },
                {
                  "expression": {
                    "id": 3147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3142,
                        "name": "hasClaimedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3112,
                        "src": "864:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3145,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3143,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2539,
                          "src": "881:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "881:12:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "864:30:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "897:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "864:37:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3148,
                  "nodeType": "ExpressionStatement",
                  "src": "864:37:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3150,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2539,
                          "src": "960:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "960:12:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3152,
                        "name": "_claimAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3134,
                        "src": "974:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3149,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 641,
                      "src": "954:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "954:33:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3154,
                  "nodeType": "ExpressionStatement",
                  "src": "954:33:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3156,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 320,
                            "src": "1066:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 3157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1066:13:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3158,
                            "name": "_oldTotalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3138,
                            "src": "1083:15:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 3159,
                            "name": "_claimAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3134,
                            "src": "1101:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1083:30:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1066:47:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3155,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "1059:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1059:55:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3163,
                  "nodeType": "ExpressionStatement",
                  "src": "1059:55:18"
                }
              ]
            },
            "functionSelector": "d053407b",
            "id": 3165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBananas",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "537:2:18"
            },
            "returnParameters": {
              "id": 3122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "546:0:18"
            },
            "scope": 3166,
            "src": "518:604:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3167,
        "src": "180:945:18"
      }
    ],
    "src": "40:1085:18"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x95Ef893947dCeeB6331248cAC53c643e2d3CA84A",
      "transactionHash": "0xdef4ee190c3429e4b135c6eafed8fcd04eb9de61d5283517138353dd558c7b2c"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-02-03T20:26:11.099Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}